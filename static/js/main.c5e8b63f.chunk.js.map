{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","shortNameId","uuidv4","shortTelId","handleChange","e","target","value","reset","className","s","Container","Form","preventDefault","htmlFor","FormTitle","FormInput","id","type","pattern","title","onChange","required","FormBtn","ContactList","contacts","onDeleteContact","map","ContactItem","Text","onClick","Filter","filter","FilterTitle","App","contactsArray","JSON","parse","localStorage","getItem","setContacts","useEffect","setItem","stringify","useLs","setFilter","info","el","toLowerCase","includes","alert","newContact","contact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e8b63f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__1D-jS\",\"Form\":\"ContactForm_Form__1RmXo\",\"FormTitle\":\"ContactForm_FormTitle__D24K0\",\"FormBtn\":\"ContactForm_FormBtn__2dBBz\",\"FormInput\":\"ContactForm_FormInput__1TyVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3Q68U\",\"ContactItem\":\"ContactList_ContactItem__1j4ti\",\"Text\":\"ContactList_Text__Aa8rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2XfMQ\",\"FilterTitle\":\"Filter_FilterTitle__sxtEW\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const shortNameId = uuidv4();\r\n  const shortTelId = uuidv4();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.Container}>\r\n      <form className={s.Form} onSubmit={handleSubmit}>\r\n        <label htmlFor={shortNameId} className={s.FormTitle}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.FormInput}\r\n          value={name}\r\n          id={shortNameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor={shortTelId} className={s.FormTitle}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.FormInput}\r\n          value={number}\r\n          id={shortTelId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" className={s.FormBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} id={s.ContactItem}>\r\n          <p className={s.Text}>{name}:</p>\r\n          <p className={s.Text}>{number}:</p>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label className={s.FilterTitle}>Find contacts by name</label>\r\n      <input type=\"text\" name=\"name\" value={filter} onChange={onChange}></input>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport contactsArray from '../contacts.json';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const useLs = contactsArray => {\r\n    const [contacts, setContacts] = useState(\r\n      () => JSON.parse(localStorage.getItem('saveContacts')) ?? contactsArray\r\n    );\r\n    useEffect(\r\n      () => localStorage.setItem('saveContacts', JSON.stringify(contacts)),\r\n      [contacts]\r\n    );\r\n    return [contacts, setContacts];\r\n  };\r\n\r\n  const [contacts, setContacts] = useLs(contactsArray);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContacts = info => {\r\n    const searchSameName = contacts\r\n      .map(el => el.name.toLowerCase())\r\n      .includes(info.name.toLowerCase());\r\n\r\n    if (searchSameName) {\r\n      alert(`${info.name} is already in contacts`);\r\n    } else {\r\n      const newContact = { ...info, id: uuidv4() };\r\n      setContacts([newContact, ...contacts]);\r\n    }\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n  const setFilteredContacts = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContacts} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChange={setFilteredContacts} />\r\n      <ContactList\r\n        contacts={getVisibleContacts()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}