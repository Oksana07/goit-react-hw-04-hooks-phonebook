{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App/App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","s","contact__form","input__form","preventDefault","contact","id","uuidv4","input__title","type","pattern","title","required","input__name","onChange","input__number","btn__add","Filter","filter","filter__container","filter__title","filter__input","ContactList","contacts","deleteContact","map","contact__item","item","onClick__btn","onClick","App","dataContacts","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","some","elem","toLowerCase","alert","filterContact","includes","handleFilterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64838d1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__21WcP\",\"input__number\":\"ContactForm_input__number__1if42\",\"input__name\":\"ContactForm_input__name__JKIHe\",\"input__title\":\"ContactForm_input__title__2UjWz\",\"btn__add\":\"ContactForm_btn__add__1FFUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1goEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__1Io6r\",\"filter__input\":\"Filter_filter__input__3qMws\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    onSubmit(contact);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.contact__form}>\n      <form className={s.input__form} onSubmit={handleSubmit}>\n        <label>\n          <span className={s.input__title}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input__name}\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          <span className={s.input__title}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input__number}\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.btn__add}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  nameInputId: PropTypes.string,\n  numberInputId: PropTypes.string,\n};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter__container}>\n      <label className={s.filter__title}>\n        Find contacts by name\n        <input\n          className={s.filter__input}\n          type=\"text\"\n          value={filter}\n          name=\"name\"\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <div>\n      <ul className=\"contact-list\">\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.contact__item}>\n            <p className={s.item}>{name}:</p>\n            <p className={s.item}>{number}</p>\n            <button\n              key={id}\n              type=\"button\"\n              className={s.onClick__btn}\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport dataContacts from '../JsonFile/contacts.json';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(dataContacts);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = data => {\n    const allReadyPresentContact = contacts.some(\n      elem => elem.name.toLowerCase() === data.name.toLowerCase(),\n    );\n\n    if (allReadyPresentContact) {\n      return alert(`${data.name} is already in contacts.`);\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const handleFilterContact = () => {\n    const filterContact = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContact),\n    );\n  };\n\n  const delContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <div className=\"Container\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <ContactList\n        contacts={handleFilterContact()}\n        deleteContact={delContact}\n      />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}